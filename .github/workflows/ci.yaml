name: 🛠️ CI

on:
  push:
    branches: [ "gha" ]
  pull_request:
    branches: [ "master" ]

jobs:
  prepare:
    runs-on: ubuntu-latest
    name: "Prepare"
    outputs:
      new-version: ${{ steps.version.outputs.new-version }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Calculate version
        id: version
        uses: cdqag/action-version@v2
        with:
          pep440-compliant: true

  ci:
    needs: prepare
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    name: "CI @${{ matrix.os }}"
    
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Bump version in known files
        uses: mingjun97/file-regex-replace@v1
        with:
          regex: '^version ?= ?"[0-9\.]+"'
          replacement: 'version = "${{ needs.prepare.outputs.new-version }}"'
          include: 'pyproject\.toml|version\.py'
          flags: 'gm'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: 1.8.5

      - name: Install dependencies
        run: |
          poetry install

      - name: Build
        env:
          RUNNER_OS: ${{ runner.os }}
        run: |
          BIN_NAME="nexus-migrator"
          if [ "$RUNNER_OS" == "Windows" ]; then
            BIN_NAME="$BIN_NAME.exe"
          fi
          echo "BIN_NAME=$BIN_NAME" >> $GITHUB_ENV

          poetry run pyinstaller --onefile --clean --name $BIN_NAME cli.py
